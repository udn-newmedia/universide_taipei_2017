webpackJsonp([1],{0:function(t,e){},7:function(t,e,a){"use strict";function o(t){return t&&t.__esModule?t:{default:t}}a(0);var s=a(1),c=o(s);a(2),a(3);var l=a(8),i=o(l);(0,c.default)(document).ready(function(){function t(t){var e=(0,c.default)("#movie-"+t).get(0).currentTime/(0,c.default)("#movie-"+t).get(0).duration;console.log(e),n.clearRect(0,0,35,35),n.beginPath(),n.arc(17.5,17.5,16,0,2*Math.PI),n.strokeStyle="rgba(255, 255, 255, 0.2)",n.stroke(),n.beginPath(),n.arc(17.5,17.5,16,-.5*Math.PI,(2*e-.5)*Math.PI),n.strokeStyle="#FFA31F",n.stroke()}var e,a=null,o=document.getElementById("back-1"),s=o.getContext("2d"),l=document.getElementById("video-state"),n=l.getContext("2d");(0,c.default)("video").on("ended",function(){console.log(this),console.log(e),n.clearRect(0,0,35,35),n.beginPath(),n.arc(17.5,17.5,16,-.5*Math.PI,1.5*Math.PI),n.stroke(),a&&clearInterval(a),4==e&&((0,c.default)("#video-state-contain .fa-play").css("opacity",.7),(0,c.default)("#section-4 .box-container-c").css("opacity",1)),6==e&&(0,c.default)("#video-state-contain .fa-play").css("opacity",.7),7==e&&(0,c.default)("#video-state-contain .fa-play").css("opacity",.7),8==e&&(0,c.default)("#video-state-contain .fa-play").css("opacity",.7),9==e&&(0,c.default)("#video-state-contain .fa-play").css("opacity",.7),10==e&&(0,c.default)("#video-state-contain .fa-play").css("opacity",.7)}),(0,c.default)("#video-state-contain .fa-play").click(function(){(0,c.default)("#video-state-contain .fa-play").css("opacity",0),(0,c.default)("#movie-"+e).get(0).play(),a=setInterval(function(){t(e)},100),4==e&&(0,c.default)("#section-4 .box-container-c").css("opacity",0)}),(0,c.default)("#back-1").prop("width",375),(0,c.default)("#back-1").prop("height",667),(0,c.default)("#video-state").prop("width",35),(0,c.default)("#video-state").prop("height",35),n.lineWidth=3;var d=new Image;d.addEventListener("load",function(){s.drawImage(d,0,0,375,667,0,0,375,667)},!1),d.src=i.default,(0,c.default)("#fullpage").fullpage({navigation:!1,scrollOverflow:!0,afterLoad:function(o,s){e=s,1==s&&(console.log(s),(0,c.default)("#cover-title").css("opacity",1),(0,c.default)("#cover-title").css("transform","translate(0, 0)"),(0,c.default)("#cover-subtitle").css("opacity",1),(0,c.default)("#cover-subtitle").css("transform","translate(0, 0)"),(0,c.default)("#cover-v h1").css("opacity",1),(0,c.default)("#cover-v h1").css("transform","translate(0, 0)"),(0,c.default)("#cover-v hr").css("width","100%")),2==s&&((0,c.default)("#cover-title").css("opacity",0),(0,c.default)("#cover-title").css("transform","translate(0, 50px)"),(0,c.default)("#cover-subtitle").css("opacity",0),(0,c.default)("#cover-subtitle").css("transform","translate(0, 50px)"),(0,c.default)("#cover-v h1").css("opacity",0),(0,c.default)("#cover-v h1").css("transform","translate(0, 50px)"),(0,c.default)("#cover-v hr").css("width","0"),(0,c.default)("#section-3 .box-container").css("transform","translate(0, 50px)")),3==s&&((0,c.default)("#section-3 .box-container").css("opacity",1),(0,c.default)("#section-3 .box-container").css("transform","translate(0, 0)")),4==s&&((0,c.default)("#section-3 .box-container").css("transform","translate(0, 50px)"),(0,c.default)("#movie-4").get(0).play(),(0,c.default)("#video-state").css("opacity",.7),a=setInterval(function(){t(4)},100)),5==s&&(0,c.default)("#movie-5").get(0).play(),6==s&&((0,c.default)("#movie-6").get(0).play(),(0,c.default)("#video-state").css("opacity",.7),a=setInterval(function(){t(6)},100)),7==s&&((0,c.default)("#movie-7").get(0).play(),(0,c.default)("#video-state").css("opacity",.7),a=setInterval(function(){t(7)},100)),8==s&&((0,c.default)("#movie-8").get(0).play(),(0,c.default)("#video-state").css("opacity",.7),a=setInterval(function(){t(8)},100)),9==s&&((0,c.default)("#movie-9").get(0).play(),(0,c.default)("#video-state").css("opacity",.7),a=setInterval(function(){t(9)},100)),10==s&&((0,c.default)("#movie-10").get(0).play(),(0,c.default)("#video-state").css("opacity",.7),a=setInterval(function(){t(10)},100))},onLeave:function(t,e,o){2==t&&"down"==o&&(s.clearRect(0,0,375,667),(0,c.default)("#section-3 .orange-back").css("height","100vh")),3==t&&(0,c.default)("#section-3 .box-container").css("opacity",0),4==t&&((0,c.default)("#video-state").css("opacity",0),(0,c.default)("#video-state-contain .fa-play").css("opacity",0),(0,c.default)("#section-4 .box-container-c").css("opacity",0),clearInterval(a)),6==t&&((0,c.default)("#video-state").css("opacity",0),(0,c.default)("#video-state-contain .fa-play").css("opacity",0),clearInterval(a)),7==t&&((0,c.default)("#video-state").css("opacity",0),(0,c.default)("#video-state-contain .fa-play").css("opacity",0),clearInterval(a)),8==t&&((0,c.default)("#video-state").css("opacity",0),(0,c.default)("#video-state-contain .fa-play").css("opacity",0),clearInterval(a)),9==t&&((0,c.default)("#video-state").css("opacity",0),(0,c.default)("#video-state-contain .fa-play").css("opacity",0),clearInterval(a)),10==t&&((0,c.default)("#video-state").css("opacity",0),(0,c.default)("#video-state-contain .fa-play").css("opacity",0),clearInterval(a))}}),(0,c.default)(".fp-section").css("transition","all .7s ease-in-out")})},8:function(t,e,a){t.exports=a.p+"388d461e246d9066b4d444377e5ada58.png"}},[7]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZ3ltbmFzdGljcy40YWJiMWQzZGRlMzU4YmQ0ZGI1Zi5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvZ3ltbmFzdGljcy5qcyIsIndlYnBhY2s6Ly8vLi9hc3NldHMvZ3ltLWJnLnBuZyJdLCJuYW1lcyI6WyJ3ZWJwYWNrSnNvbnAiLCIwIiwibW9kdWxlIiwiZXhwb3J0cyIsIjciLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIm9iaiIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiX2pxdWVyeSIsIl9qcXVlcnkyIiwiX2d5bUJnIiwiX2d5bUJnMiIsImRvY3VtZW50IiwicmVhZHkiLCJkcmF3VmlkZW9TdGF0ZSIsImlkIiwicHJvZ3Jlc3MiLCJnZXQiLCJjdXJyZW50VGltZSIsImR1cmF0aW9uIiwiY29uc29sZSIsImxvZyIsInZpZGVvX3N0YXRlIiwiY2xlYXJSZWN0IiwiYmVnaW5QYXRoIiwiYXJjIiwiTWF0aCIsIlBJIiwic3Ryb2tlU3R5bGUiLCJzdHJva2UiLCJpbmRleF9ub3ciLCJ2aWRlb1RyYWNrIiwiY2FudmFzIiwiZ2V0RWxlbWVudEJ5SWQiLCJjdHgiLCJnZXRDb250ZXh0IiwiY2FudmFzMiIsIm9uIiwidGhpcyIsImNsZWFySW50ZXJ2YWwiLCJjc3MiLCJjbGljayIsInBsYXkiLCJzZXRJbnRlcnZhbCIsInByb3AiLCJsaW5lV2lkdGgiLCJpbWciLCJJbWFnZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJkcmF3SW1hZ2UiLCJzcmMiLCJmdWxscGFnZSIsIm5hdmlnYXRpb24iLCJzY3JvbGxPdmVyZmxvdyIsImFmdGVyTG9hZCIsImFuY2hvckxpbmsiLCJpbmRleCIsIm9uTGVhdmUiLCJuZXh0SW5kZXgiLCJkaXJlY3Rpb24iLCI4IiwicCJdLCJtYXBwaW5ncyI6IkFBQUFBLGNBQWMsSUFFUkMsRUFDQSxTQUFVQyxFQUFRQyxLQU1sQkMsRUFDQSxTQUFVRixFQUFRQyxFQUFTRSxHQUVqQyxZQWlC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QWNSLFFBTzFCLEVBQUF0QixFQUFBRixTQUFFLGVBQWVpQyxJQUFJLGFBQWMsMEJEMEJqQ29CLEVBQ0EsU0FBVTVELEVBQVFDLEVBQVNFLEdFcFBqQ0gsRUFBQUMsUUFBQUUsRUFBQTBELEVBQUEsMENGMFBHIiwiZmlsZSI6Imd5bW5hc3RpY3MuNGFiYjFkM2RkZTM1OGJkNGRiNWYuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ3ZWJwYWNrSnNvbnAoWzFdLHtcblxuLyoqKi8gMDpcbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcblxuLy8gcmVtb3ZlZCBieSBleHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW5cblxuLyoqKi8gfSksXG5cbi8qKiovIDc6XG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuXG5cbl9fd2VicGFja19yZXF1aXJlX18oMCk7XG5cbnZhciBfanF1ZXJ5ID0gX193ZWJwYWNrX3JlcXVpcmVfXygxKTtcblxudmFyIF9qcXVlcnkyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfanF1ZXJ5KTtcblxuX193ZWJwYWNrX3JlcXVpcmVfXygyKTtcblxuX193ZWJwYWNrX3JlcXVpcmVfXygzKTtcblxudmFyIF9neW1CZyA9IF9fd2VicGFja19yZXF1aXJlX18oOCk7XG5cbnZhciBfZ3ltQmcyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZ3ltQmcpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4oMCwgX2pxdWVyeTIuZGVmYXVsdCkoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uICgpIHtcblxuICAgIHZhciB2aWRlb1RyYWNrID0gbnVsbDtcbiAgICB2YXIgaW5kZXhfbm93O1xuXG4gICAgdmFyIGNhbnZhcyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdiYWNrLTEnKTtcbiAgICB2YXIgY3R4ID0gY2FudmFzLmdldENvbnRleHQoJzJkJyk7XG5cbiAgICB2YXIgY2FudmFzMiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd2aWRlby1zdGF0ZScpO1xuICAgIHZhciB2aWRlb19zdGF0ZSA9IGNhbnZhczIuZ2V0Q29udGV4dCgnMmQnKTtcblxuICAgIGZ1bmN0aW9uIGRyYXdWaWRlb1N0YXRlKGlkKSB7XG5cbiAgICAgICAgdmFyIHByb2dyZXNzID0gKDAsIF9qcXVlcnkyLmRlZmF1bHQpKCcjbW92aWUtJyArIGlkKS5nZXQoMCkuY3VycmVudFRpbWUgLyAoMCwgX2pxdWVyeTIuZGVmYXVsdCkoJyNtb3ZpZS0nICsgaWQpLmdldCgwKS5kdXJhdGlvbjtcbiAgICAgICAgY29uc29sZS5sb2cocHJvZ3Jlc3MpO1xuICAgICAgICB2aWRlb19zdGF0ZS5jbGVhclJlY3QoMCwgMCwgMzUsIDM1KTtcblxuICAgICAgICB2aWRlb19zdGF0ZS5iZWdpblBhdGgoKTtcbiAgICAgICAgdmlkZW9fc3RhdGUuYXJjKDE3LjUsIDE3LjUsIDE2LCAwLCAyICogTWF0aC5QSSk7XG4gICAgICAgIHZpZGVvX3N0YXRlLnN0cm9rZVN0eWxlID0gJ3JnYmEoMjU1LCAyNTUsIDI1NSwgMC4yKSc7XG4gICAgICAgIHZpZGVvX3N0YXRlLnN0cm9rZSgpO1xuXG4gICAgICAgIHZpZGVvX3N0YXRlLmJlZ2luUGF0aCgpO1xuICAgICAgICB2aWRlb19zdGF0ZS5hcmMoMTcuNSwgMTcuNSwgMTYsIC0wLjUgKiBNYXRoLlBJLCAoMiAqIHByb2dyZXNzIC0gMC41KSAqIE1hdGguUEkpO1xuICAgICAgICB2aWRlb19zdGF0ZS5zdHJva2VTdHlsZSA9IFwiI0ZGQTMxRlwiO1xuICAgICAgICB2aWRlb19zdGF0ZS5zdHJva2UoKTtcbiAgICB9XG5cbiAgICAoMCwgX2pxdWVyeTIuZGVmYXVsdCkoJ3ZpZGVvJykub24oJ2VuZGVkJywgZnVuY3Rpb24gKCkge1xuICAgICAgICBjb25zb2xlLmxvZyh0aGlzKTtcbiAgICAgICAgY29uc29sZS5sb2coaW5kZXhfbm93KTtcblxuICAgICAgICB2aWRlb19zdGF0ZS5jbGVhclJlY3QoMCwgMCwgMzUsIDM1KTtcblxuICAgICAgICB2aWRlb19zdGF0ZS5iZWdpblBhdGgoKTtcbiAgICAgICAgdmlkZW9fc3RhdGUuYXJjKDE3LjUsIDE3LjUsIDE2LCAtMC41ICogTWF0aC5QSSwgKDIgKiAxIC0gMC41KSAqIE1hdGguUEkpO1xuICAgICAgICB2aWRlb19zdGF0ZS5zdHJva2UoKTtcbiAgICAgICAgaWYgKHZpZGVvVHJhY2spIHtcbiAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwodmlkZW9UcmFjayk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGluZGV4X25vdyA9PSA0KSB7XG4gICAgICAgICAgICAoMCwgX2pxdWVyeTIuZGVmYXVsdCkoJyN2aWRlby1zdGF0ZS1jb250YWluIC5mYS1wbGF5JykuY3NzKCdvcGFjaXR5JywgMC43KTtcbiAgICAgICAgICAgICgwLCBfanF1ZXJ5Mi5kZWZhdWx0KSgnI3NlY3Rpb24tNCAuYm94LWNvbnRhaW5lci1jJykuY3NzKCdvcGFjaXR5JywgMSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGluZGV4X25vdyA9PSA2KSB7XG4gICAgICAgICAgICAoMCwgX2pxdWVyeTIuZGVmYXVsdCkoJyN2aWRlby1zdGF0ZS1jb250YWluIC5mYS1wbGF5JykuY3NzKCdvcGFjaXR5JywgMC43KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaW5kZXhfbm93ID09IDcpIHtcbiAgICAgICAgICAgICgwLCBfanF1ZXJ5Mi5kZWZhdWx0KSgnI3ZpZGVvLXN0YXRlLWNvbnRhaW4gLmZhLXBsYXknKS5jc3MoJ29wYWNpdHknLCAwLjcpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpbmRleF9ub3cgPT0gOCkge1xuICAgICAgICAgICAgKDAsIF9qcXVlcnkyLmRlZmF1bHQpKCcjdmlkZW8tc3RhdGUtY29udGFpbiAuZmEtcGxheScpLmNzcygnb3BhY2l0eScsIDAuNyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGluZGV4X25vdyA9PSA5KSB7XG4gICAgICAgICAgICAoMCwgX2pxdWVyeTIuZGVmYXVsdCkoJyN2aWRlby1zdGF0ZS1jb250YWluIC5mYS1wbGF5JykuY3NzKCdvcGFjaXR5JywgMC43KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaW5kZXhfbm93ID09IDEwKSB7XG4gICAgICAgICAgICAoMCwgX2pxdWVyeTIuZGVmYXVsdCkoJyN2aWRlby1zdGF0ZS1jb250YWluIC5mYS1wbGF5JykuY3NzKCdvcGFjaXR5JywgMC43KTtcbiAgICAgICAgfVxuICAgIH0pO1xuXG4gICAgKDAsIF9qcXVlcnkyLmRlZmF1bHQpKCcjdmlkZW8tc3RhdGUtY29udGFpbiAuZmEtcGxheScpLmNsaWNrKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgKDAsIF9qcXVlcnkyLmRlZmF1bHQpKCcjdmlkZW8tc3RhdGUtY29udGFpbiAuZmEtcGxheScpLmNzcygnb3BhY2l0eScsIDApO1xuICAgICAgICAoMCwgX2pxdWVyeTIuZGVmYXVsdCkoJyNtb3ZpZS0nICsgaW5kZXhfbm93KS5nZXQoMCkucGxheSgpO1xuICAgICAgICB2aWRlb1RyYWNrID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgZHJhd1ZpZGVvU3RhdGUoaW5kZXhfbm93KTtcbiAgICAgICAgfSwgMTAwKTtcbiAgICAgICAgaWYgKGluZGV4X25vdyA9PSA0KSB7XG4gICAgICAgICAgICAoMCwgX2pxdWVyeTIuZGVmYXVsdCkoJyNzZWN0aW9uLTQgLmJveC1jb250YWluZXItYycpLmNzcygnb3BhY2l0eScsIDApO1xuICAgICAgICB9XG4gICAgfSk7XG5cbiAgICAoMCwgX2pxdWVyeTIuZGVmYXVsdCkoJyNiYWNrLTEnKS5wcm9wKCd3aWR0aCcsIDM3NSk7XG4gICAgKDAsIF9qcXVlcnkyLmRlZmF1bHQpKCcjYmFjay0xJykucHJvcCgnaGVpZ2h0JywgNjY3KTtcblxuICAgICgwLCBfanF1ZXJ5Mi5kZWZhdWx0KSgnI3ZpZGVvLXN0YXRlJykucHJvcCgnd2lkdGgnLCAzNSk7XG4gICAgKDAsIF9qcXVlcnkyLmRlZmF1bHQpKCcjdmlkZW8tc3RhdGUnKS5wcm9wKCdoZWlnaHQnLCAzNSk7XG5cbiAgICB2aWRlb19zdGF0ZS5saW5lV2lkdGggPSAzO1xuXG4gICAgdmFyIGltZyA9IG5ldyBJbWFnZSgpO1xuICAgIGltZy5hZGRFdmVudExpc3RlbmVyKFwibG9hZFwiLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGN0eC5kcmF3SW1hZ2UoaW1nLCAwLCAwLCAzNzUsIDY2NywgMCwgMCwgMzc1LCA2NjcpO1xuICAgIH0sIGZhbHNlKTtcbiAgICBpbWcuc3JjID0gX2d5bUJnMi5kZWZhdWx0O1xuXG4gICAgKDAsIF9qcXVlcnkyLmRlZmF1bHQpKCcjZnVsbHBhZ2UnKS5mdWxscGFnZSh7XG4gICAgICAgIG5hdmlnYXRpb246IGZhbHNlLFxuICAgICAgICBzY3JvbGxPdmVyZmxvdzogdHJ1ZSxcbiAgICAgICAgYWZ0ZXJMb2FkOiBmdW5jdGlvbiBhZnRlckxvYWQoYW5jaG9yTGluaywgaW5kZXgpIHtcbiAgICAgICAgICAgIGluZGV4X25vdyA9IGluZGV4O1xuICAgICAgICAgICAgaWYgKGluZGV4ID09IDEpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhpbmRleCk7XG4gICAgICAgICAgICAgICAgKDAsIF9qcXVlcnkyLmRlZmF1bHQpKCcjY292ZXItdGl0bGUnKS5jc3MoJ29wYWNpdHknLCAxKTtcbiAgICAgICAgICAgICAgICAoMCwgX2pxdWVyeTIuZGVmYXVsdCkoJyNjb3Zlci10aXRsZScpLmNzcygndHJhbnNmb3JtJywgJ3RyYW5zbGF0ZSgwLCAwKScpO1xuICAgICAgICAgICAgICAgICgwLCBfanF1ZXJ5Mi5kZWZhdWx0KSgnI2NvdmVyLXN1YnRpdGxlJykuY3NzKCdvcGFjaXR5JywgMSk7XG4gICAgICAgICAgICAgICAgKDAsIF9qcXVlcnkyLmRlZmF1bHQpKCcjY292ZXItc3VidGl0bGUnKS5jc3MoJ3RyYW5zZm9ybScsICd0cmFuc2xhdGUoMCwgMCknKTtcbiAgICAgICAgICAgICAgICAoMCwgX2pxdWVyeTIuZGVmYXVsdCkoJyNjb3Zlci12IGgxJykuY3NzKCdvcGFjaXR5JywgMSk7XG4gICAgICAgICAgICAgICAgKDAsIF9qcXVlcnkyLmRlZmF1bHQpKCcjY292ZXItdiBoMScpLmNzcygndHJhbnNmb3JtJywgJ3RyYW5zbGF0ZSgwLCAwKScpO1xuICAgICAgICAgICAgICAgICgwLCBfanF1ZXJ5Mi5kZWZhdWx0KSgnI2NvdmVyLXYgaHInKS5jc3MoJ3dpZHRoJywgJzEwMCUnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChpbmRleCA9PSAyKSB7XG4gICAgICAgICAgICAgICAgKDAsIF9qcXVlcnkyLmRlZmF1bHQpKCcjY292ZXItdGl0bGUnKS5jc3MoJ29wYWNpdHknLCAwKTtcbiAgICAgICAgICAgICAgICAoMCwgX2pxdWVyeTIuZGVmYXVsdCkoJyNjb3Zlci10aXRsZScpLmNzcygndHJhbnNmb3JtJywgJ3RyYW5zbGF0ZSgwLCA1MHB4KScpO1xuICAgICAgICAgICAgICAgICgwLCBfanF1ZXJ5Mi5kZWZhdWx0KSgnI2NvdmVyLXN1YnRpdGxlJykuY3NzKCdvcGFjaXR5JywgMCk7XG4gICAgICAgICAgICAgICAgKDAsIF9qcXVlcnkyLmRlZmF1bHQpKCcjY292ZXItc3VidGl0bGUnKS5jc3MoJ3RyYW5zZm9ybScsICd0cmFuc2xhdGUoMCwgNTBweCknKTtcbiAgICAgICAgICAgICAgICAoMCwgX2pxdWVyeTIuZGVmYXVsdCkoJyNjb3Zlci12IGgxJykuY3NzKCdvcGFjaXR5JywgMCk7XG4gICAgICAgICAgICAgICAgKDAsIF9qcXVlcnkyLmRlZmF1bHQpKCcjY292ZXItdiBoMScpLmNzcygndHJhbnNmb3JtJywgJ3RyYW5zbGF0ZSgwLCA1MHB4KScpO1xuICAgICAgICAgICAgICAgICgwLCBfanF1ZXJ5Mi5kZWZhdWx0KSgnI2NvdmVyLXYgaHInKS5jc3MoJ3dpZHRoJywgJzAnKTtcbiAgICAgICAgICAgICAgICAoMCwgX2pxdWVyeTIuZGVmYXVsdCkoJyNzZWN0aW9uLTMgLmJveC1jb250YWluZXInKS5jc3MoJ3RyYW5zZm9ybScsICd0cmFuc2xhdGUoMCwgNTBweCknKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChpbmRleCA9PSAzKSB7XG4gICAgICAgICAgICAgICAgKDAsIF9qcXVlcnkyLmRlZmF1bHQpKCcjc2VjdGlvbi0zIC5ib3gtY29udGFpbmVyJykuY3NzKCdvcGFjaXR5JywgMSk7XG4gICAgICAgICAgICAgICAgKDAsIF9qcXVlcnkyLmRlZmF1bHQpKCcjc2VjdGlvbi0zIC5ib3gtY29udGFpbmVyJykuY3NzKCd0cmFuc2Zvcm0nLCAndHJhbnNsYXRlKDAsIDApJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoaW5kZXggPT0gNCkge1xuICAgICAgICAgICAgICAgICgwLCBfanF1ZXJ5Mi5kZWZhdWx0KSgnI3NlY3Rpb24tMyAuYm94LWNvbnRhaW5lcicpLmNzcygndHJhbnNmb3JtJywgJ3RyYW5zbGF0ZSgwLCA1MHB4KScpO1xuICAgICAgICAgICAgICAgICgwLCBfanF1ZXJ5Mi5kZWZhdWx0KSgnI21vdmllLTQnKS5nZXQoMCkucGxheSgpO1xuICAgICAgICAgICAgICAgICgwLCBfanF1ZXJ5Mi5kZWZhdWx0KSgnI3ZpZGVvLXN0YXRlJykuY3NzKCdvcGFjaXR5JywgMC43KTtcbiAgICAgICAgICAgICAgICB2aWRlb1RyYWNrID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICBkcmF3VmlkZW9TdGF0ZSg0KTtcbiAgICAgICAgICAgICAgICB9LCAxMDApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGluZGV4ID09IDUpIHtcbiAgICAgICAgICAgICAgICAoMCwgX2pxdWVyeTIuZGVmYXVsdCkoJyNtb3ZpZS01JykuZ2V0KDApLnBsYXkoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChpbmRleCA9PSA2KSB7XG4gICAgICAgICAgICAgICAgKDAsIF9qcXVlcnkyLmRlZmF1bHQpKCcjbW92aWUtNicpLmdldCgwKS5wbGF5KCk7XG4gICAgICAgICAgICAgICAgKDAsIF9qcXVlcnkyLmRlZmF1bHQpKCcjdmlkZW8tc3RhdGUnKS5jc3MoJ29wYWNpdHknLCAwLjcpO1xuICAgICAgICAgICAgICAgIHZpZGVvVHJhY2sgPSBzZXRJbnRlcnZhbChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIGRyYXdWaWRlb1N0YXRlKDYpO1xuICAgICAgICAgICAgICAgIH0sIDEwMCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoaW5kZXggPT0gNykge1xuICAgICAgICAgICAgICAgICgwLCBfanF1ZXJ5Mi5kZWZhdWx0KSgnI21vdmllLTcnKS5nZXQoMCkucGxheSgpO1xuICAgICAgICAgICAgICAgICgwLCBfanF1ZXJ5Mi5kZWZhdWx0KSgnI3ZpZGVvLXN0YXRlJykuY3NzKCdvcGFjaXR5JywgMC43KTtcbiAgICAgICAgICAgICAgICB2aWRlb1RyYWNrID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICBkcmF3VmlkZW9TdGF0ZSg3KTtcbiAgICAgICAgICAgICAgICB9LCAxMDApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGluZGV4ID09IDgpIHtcbiAgICAgICAgICAgICAgICAoMCwgX2pxdWVyeTIuZGVmYXVsdCkoJyNtb3ZpZS04JykuZ2V0KDApLnBsYXkoKTtcbiAgICAgICAgICAgICAgICAoMCwgX2pxdWVyeTIuZGVmYXVsdCkoJyN2aWRlby1zdGF0ZScpLmNzcygnb3BhY2l0eScsIDAuNyk7XG4gICAgICAgICAgICAgICAgdmlkZW9UcmFjayA9IHNldEludGVydmFsKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgZHJhd1ZpZGVvU3RhdGUoOCk7XG4gICAgICAgICAgICAgICAgfSwgMTAwKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChpbmRleCA9PSA5KSB7XG4gICAgICAgICAgICAgICAgKDAsIF9qcXVlcnkyLmRlZmF1bHQpKCcjbW92aWUtOScpLmdldCgwKS5wbGF5KCk7XG4gICAgICAgICAgICAgICAgKDAsIF9qcXVlcnkyLmRlZmF1bHQpKCcjdmlkZW8tc3RhdGUnKS5jc3MoJ29wYWNpdHknLCAwLjcpO1xuICAgICAgICAgICAgICAgIHZpZGVvVHJhY2sgPSBzZXRJbnRlcnZhbChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIGRyYXdWaWRlb1N0YXRlKDkpO1xuICAgICAgICAgICAgICAgIH0sIDEwMCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoaW5kZXggPT0gMTApIHtcbiAgICAgICAgICAgICAgICAoMCwgX2pxdWVyeTIuZGVmYXVsdCkoJyNtb3ZpZS0xMCcpLmdldCgwKS5wbGF5KCk7XG4gICAgICAgICAgICAgICAgKDAsIF9qcXVlcnkyLmRlZmF1bHQpKCcjdmlkZW8tc3RhdGUnKS5jc3MoJ29wYWNpdHknLCAwLjcpO1xuICAgICAgICAgICAgICAgIHZpZGVvVHJhY2sgPSBzZXRJbnRlcnZhbChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIGRyYXdWaWRlb1N0YXRlKDEwKTtcbiAgICAgICAgICAgICAgICB9LCAxMDApO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBvbkxlYXZlOiBmdW5jdGlvbiBvbkxlYXZlKGluZGV4LCBuZXh0SW5kZXgsIGRpcmVjdGlvbikge1xuXG4gICAgICAgICAgICBpZiAoaW5kZXggPT0gMiAmJiBkaXJlY3Rpb24gPT0gJ2Rvd24nKSB7XG4gICAgICAgICAgICAgICAgY3R4LmNsZWFyUmVjdCgwLCAwLCAzNzUsIDY2Nyk7XG4gICAgICAgICAgICAgICAgKDAsIF9qcXVlcnkyLmRlZmF1bHQpKCcjc2VjdGlvbi0zIC5vcmFuZ2UtYmFjaycpLmNzcygnaGVpZ2h0JywgJzEwMHZoJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoaW5kZXggPT0gMykge1xuICAgICAgICAgICAgICAgICgwLCBfanF1ZXJ5Mi5kZWZhdWx0KSgnI3NlY3Rpb24tMyAuYm94LWNvbnRhaW5lcicpLmNzcygnb3BhY2l0eScsIDApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGluZGV4ID09IDQpIHtcbiAgICAgICAgICAgICAgICAoMCwgX2pxdWVyeTIuZGVmYXVsdCkoJyN2aWRlby1zdGF0ZScpLmNzcygnb3BhY2l0eScsIDApO1xuICAgICAgICAgICAgICAgICgwLCBfanF1ZXJ5Mi5kZWZhdWx0KSgnI3ZpZGVvLXN0YXRlLWNvbnRhaW4gLmZhLXBsYXknKS5jc3MoJ29wYWNpdHknLCAwKTtcbiAgICAgICAgICAgICAgICAoMCwgX2pxdWVyeTIuZGVmYXVsdCkoJyNzZWN0aW9uLTQgLmJveC1jb250YWluZXItYycpLmNzcygnb3BhY2l0eScsIDApO1xuICAgICAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwodmlkZW9UcmFjayk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoaW5kZXggPT0gNSkge31cbiAgICAgICAgICAgIGlmIChpbmRleCA9PSA2KSB7XG4gICAgICAgICAgICAgICAgKDAsIF9qcXVlcnkyLmRlZmF1bHQpKCcjdmlkZW8tc3RhdGUnKS5jc3MoJ29wYWNpdHknLCAwKTtcbiAgICAgICAgICAgICAgICAoMCwgX2pxdWVyeTIuZGVmYXVsdCkoJyN2aWRlby1zdGF0ZS1jb250YWluIC5mYS1wbGF5JykuY3NzKCdvcGFjaXR5JywgMCk7XG4gICAgICAgICAgICAgICAgY2xlYXJJbnRlcnZhbCh2aWRlb1RyYWNrKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChpbmRleCA9PSA3KSB7XG4gICAgICAgICAgICAgICAgKDAsIF9qcXVlcnkyLmRlZmF1bHQpKCcjdmlkZW8tc3RhdGUnKS5jc3MoJ29wYWNpdHknLCAwKTtcbiAgICAgICAgICAgICAgICAoMCwgX2pxdWVyeTIuZGVmYXVsdCkoJyN2aWRlby1zdGF0ZS1jb250YWluIC5mYS1wbGF5JykuY3NzKCdvcGFjaXR5JywgMCk7XG4gICAgICAgICAgICAgICAgY2xlYXJJbnRlcnZhbCh2aWRlb1RyYWNrKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChpbmRleCA9PSA4KSB7XG4gICAgICAgICAgICAgICAgKDAsIF9qcXVlcnkyLmRlZmF1bHQpKCcjdmlkZW8tc3RhdGUnKS5jc3MoJ29wYWNpdHknLCAwKTtcbiAgICAgICAgICAgICAgICAoMCwgX2pxdWVyeTIuZGVmYXVsdCkoJyN2aWRlby1zdGF0ZS1jb250YWluIC5mYS1wbGF5JykuY3NzKCdvcGFjaXR5JywgMCk7XG4gICAgICAgICAgICAgICAgY2xlYXJJbnRlcnZhbCh2aWRlb1RyYWNrKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChpbmRleCA9PSA5KSB7XG4gICAgICAgICAgICAgICAgKDAsIF9qcXVlcnkyLmRlZmF1bHQpKCcjdmlkZW8tc3RhdGUnKS5jc3MoJ29wYWNpdHknLCAwKTtcbiAgICAgICAgICAgICAgICAoMCwgX2pxdWVyeTIuZGVmYXVsdCkoJyN2aWRlby1zdGF0ZS1jb250YWluIC5mYS1wbGF5JykuY3NzKCdvcGFjaXR5JywgMCk7XG4gICAgICAgICAgICAgICAgY2xlYXJJbnRlcnZhbCh2aWRlb1RyYWNrKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChpbmRleCA9PSAxMCkge1xuICAgICAgICAgICAgICAgICgwLCBfanF1ZXJ5Mi5kZWZhdWx0KSgnI3ZpZGVvLXN0YXRlJykuY3NzKCdvcGFjaXR5JywgMCk7XG4gICAgICAgICAgICAgICAgKDAsIF9qcXVlcnkyLmRlZmF1bHQpKCcjdmlkZW8tc3RhdGUtY29udGFpbiAuZmEtcGxheScpLmNzcygnb3BhY2l0eScsIDApO1xuICAgICAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwodmlkZW9UcmFjayk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgIH0pO1xuXG4gICAgKDAsIF9qcXVlcnkyLmRlZmF1bHQpKCcuZnAtc2VjdGlvbicpLmNzcygndHJhbnNpdGlvbicsICdhbGwgLjdzIGVhc2UtaW4tb3V0Jyk7XG59KTtcblxuLyoqKi8gfSksXG5cbi8qKiovIDg6XG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cbm1vZHVsZS5leHBvcnRzID0gX193ZWJwYWNrX3JlcXVpcmVfXy5wICsgXCIzODhkNDYxZTI0NmQ5MDY2YjRkNDQ0Mzc3ZTVhZGE1OC5wbmdcIjtcblxuLyoqKi8gfSlcblxufSxbN10pO1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBneW1uYXN0aWNzLjRhYmIxZDNkZGUzNThiZDRkYjVmLmpzIiwiaW1wb3J0ICcuLi9zdHlsZS9zdHlsZS5jc3MnXHJcbmltcG9ydCAkIGZyb20gJ2pxdWVyeSdcclxuaW1wb3J0ICdsYXp5c2l6ZXMnXHJcbmltcG9ydCAnZnVsbHBhZ2UuanMnXHJcbmltcG9ydCBpbWdCZyBmcm9tICcuLi9hc3NldHMvZ3ltLWJnLnBuZydcclxuXHJcbiQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uKCl7XHJcblxyXG4gICAgdmFyIHZpZGVvVHJhY2sgPSBudWxsXHJcbiAgICB2YXIgaW5kZXhfbm93XHJcblxyXG4gICAgdmFyIGNhbnZhcyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdiYWNrLTEnKTtcclxuICAgIHZhciBjdHggPSBjYW52YXMuZ2V0Q29udGV4dCgnMmQnKTtcclxuXHJcbiAgICB2YXIgY2FudmFzMiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd2aWRlby1zdGF0ZScpO1xyXG4gICAgdmFyIHZpZGVvX3N0YXRlID0gY2FudmFzMi5nZXRDb250ZXh0KCcyZCcpO1xyXG5cclxuICAgIGZ1bmN0aW9uIGRyYXdWaWRlb1N0YXRlKGlkKXtcclxuXHJcbiAgICAgICAgdmFyIHByb2dyZXNzID0gJCgnI21vdmllLScgKyBpZCkuZ2V0KDApLmN1cnJlbnRUaW1lIC8gJCgnI21vdmllLScgKyBpZCkuZ2V0KDApLmR1cmF0aW9uXHJcbiAgICAgICAgY29uc29sZS5sb2cocHJvZ3Jlc3MpXHJcbiAgICAgICAgdmlkZW9fc3RhdGUuY2xlYXJSZWN0KDAsIDAsIDM1LCAzNSlcclxuXHJcbiAgICAgICAgdmlkZW9fc3RhdGUuYmVnaW5QYXRoKCk7XHJcbiAgICAgICAgdmlkZW9fc3RhdGUuYXJjKDE3LjUsIDE3LjUsIDE2LCAwLCAyICogTWF0aC5QSSk7XHJcbiAgICAgICAgdmlkZW9fc3RhdGUuc3Ryb2tlU3R5bGUgPSAncmdiYSgyNTUsIDI1NSwgMjU1LCAwLjIpJ1xyXG4gICAgICAgIHZpZGVvX3N0YXRlLnN0cm9rZSgpO1xyXG5cclxuICAgICAgICB2aWRlb19zdGF0ZS5iZWdpblBhdGgoKTtcclxuICAgICAgICB2aWRlb19zdGF0ZS5hcmMoMTcuNSwxNy41LDE2LC0wLjUgKiBNYXRoLlBJLCAoMiAqIHByb2dyZXNzIC0gMC41KSAqIE1hdGguUEkpO1xyXG4gICAgICAgIHZpZGVvX3N0YXRlLnN0cm9rZVN0eWxlID0gXCIjRkZBMzFGXCI7XHJcbiAgICAgICAgdmlkZW9fc3RhdGUuc3Ryb2tlKCk7XHJcbiAgICAgICAgXHJcbiAgICB9XHJcblxyXG4gICAgJCgndmlkZW8nKS5vbignZW5kZWQnLCBmdW5jdGlvbigpe1xyXG4gICAgICAgIGNvbnNvbGUubG9nKHRoaXMpXHJcbiAgICAgICAgY29uc29sZS5sb2coaW5kZXhfbm93KVxyXG4gICAgICAgIFxyXG4gICAgICAgIHZpZGVvX3N0YXRlLmNsZWFyUmVjdCgwLCAwLCAzNSwgMzUpXHJcblxyXG4gICAgICAgIHZpZGVvX3N0YXRlLmJlZ2luUGF0aCgpO1xyXG4gICAgICAgIHZpZGVvX3N0YXRlLmFyYygxNy41LDE3LjUsMTYsLTAuNSAqIE1hdGguUEksICgyICogMSAtIDAuNSkgKiBNYXRoLlBJKTtcclxuICAgICAgICB2aWRlb19zdGF0ZS5zdHJva2UoKTtcclxuICAgICAgICBpZih2aWRlb1RyYWNrKXtcclxuICAgICAgICAgICAgY2xlYXJJbnRlcnZhbCh2aWRlb1RyYWNrKVxyXG4gICAgICAgIH1cclxuICAgICAgICBpZihpbmRleF9ub3cgPT0gNCl7XHJcbiAgICAgICAgICAgICQoJyN2aWRlby1zdGF0ZS1jb250YWluIC5mYS1wbGF5JykuY3NzKCdvcGFjaXR5JywgMC43KVxyXG4gICAgICAgICAgICAkKCcjc2VjdGlvbi00IC5ib3gtY29udGFpbmVyLWMnKS5jc3MoJ29wYWNpdHknLCAxKVxyXG4gICAgICAgIH1cclxuICAgICAgICBpZihpbmRleF9ub3cgPT0gNil7XHJcbiAgICAgICAgICAgICQoJyN2aWRlby1zdGF0ZS1jb250YWluIC5mYS1wbGF5JykuY3NzKCdvcGFjaXR5JywgMC43KVxyXG4gICAgICAgIH1cclxuICAgICAgICBpZihpbmRleF9ub3cgPT0gNyl7XHJcbiAgICAgICAgICAgICQoJyN2aWRlby1zdGF0ZS1jb250YWluIC5mYS1wbGF5JykuY3NzKCdvcGFjaXR5JywgMC43KVxyXG4gICAgICAgIH1cclxuICAgICAgICBpZihpbmRleF9ub3cgPT0gOCl7XHJcbiAgICAgICAgICAgICQoJyN2aWRlby1zdGF0ZS1jb250YWluIC5mYS1wbGF5JykuY3NzKCdvcGFjaXR5JywgMC43KVxyXG4gICAgICAgIH1cclxuICAgICAgICBpZihpbmRleF9ub3cgPT0gOSl7XHJcbiAgICAgICAgICAgICQoJyN2aWRlby1zdGF0ZS1jb250YWluIC5mYS1wbGF5JykuY3NzKCdvcGFjaXR5JywgMC43KVxyXG4gICAgICAgIH1cclxuICAgICAgICBpZihpbmRleF9ub3cgPT0gMTApe1xyXG4gICAgICAgICAgICAkKCcjdmlkZW8tc3RhdGUtY29udGFpbiAuZmEtcGxheScpLmNzcygnb3BhY2l0eScsIDAuNylcclxuICAgICAgICB9XHJcbiAgICB9KVxyXG5cclxuICAgICQoJyN2aWRlby1zdGF0ZS1jb250YWluIC5mYS1wbGF5JykuY2xpY2soZnVuY3Rpb24oKXtcclxuICAgICAgICAkKCcjdmlkZW8tc3RhdGUtY29udGFpbiAuZmEtcGxheScpLmNzcygnb3BhY2l0eScsIDApXHJcbiAgICAgICAgJCgnI21vdmllLScgKyBpbmRleF9ub3cpLmdldCgwKS5wbGF5KClcclxuICAgICAgICB2aWRlb1RyYWNrID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24oKXtcclxuICAgICAgICAgICAgZHJhd1ZpZGVvU3RhdGUoaW5kZXhfbm93KVxyXG4gICAgICAgIH0sIDEwMClcclxuICAgICAgICBpZihpbmRleF9ub3cgPT0gNCl7XHJcbiAgICAgICAgICAgICQoJyNzZWN0aW9uLTQgLmJveC1jb250YWluZXItYycpLmNzcygnb3BhY2l0eScsIDApXHJcbiAgICAgICAgfVxyXG4gICAgfSlcclxuXHJcbiAgICAkKCcjYmFjay0xJykucHJvcCgnd2lkdGgnICwgMzc1KVxyXG4gICAgJCgnI2JhY2stMScpLnByb3AoJ2hlaWdodCcsIDY2NylcclxuXHJcbiAgICAkKCcjdmlkZW8tc3RhdGUnKS5wcm9wKCd3aWR0aCcgLCAzNSlcclxuICAgICQoJyN2aWRlby1zdGF0ZScpLnByb3AoJ2hlaWdodCcsIDM1KVxyXG5cclxuICAgIHZpZGVvX3N0YXRlLmxpbmVXaWR0aCA9IDNcclxuXHJcbiAgICB2YXIgaW1nID0gbmV3IEltYWdlKClcclxuICAgIGltZy5hZGRFdmVudExpc3RlbmVyKFwibG9hZFwiLCBmdW5jdGlvbigpIHtcclxuICAgICAgICBjdHguZHJhd0ltYWdlKGltZywgMCwgMCwgMzc1LCA2NjcsIDAsIDAsIDM3NSwgNjY3KTtcclxuICAgIH0sIGZhbHNlKTtcclxuICAgIGltZy5zcmMgPSBpbWdCZ1xyXG5cclxuICAgICQoJyNmdWxscGFnZScpLmZ1bGxwYWdlKHtcclxuICAgICAgICBuYXZpZ2F0aW9uOiBmYWxzZSwgICAgXHRcclxuICAgICAgICBzY3JvbGxPdmVyZmxvdyA6IHRydWUsXHJcbiAgICAgICAgYWZ0ZXJMb2FkOiBmdW5jdGlvbihhbmNob3JMaW5rLCBpbmRleCl7XHJcbiAgICAgICAgICAgIGluZGV4X25vdyA9IGluZGV4XHJcbiAgICAgICAgICAgIGlmKGluZGV4ID09IDEpe1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coaW5kZXgpXHJcbiAgICAgICAgICAgICAgICAkKCcjY292ZXItdGl0bGUnKS5jc3MoJ29wYWNpdHknLCAxKVxyXG4gICAgICAgICAgICAgICAgJCgnI2NvdmVyLXRpdGxlJykuY3NzKCd0cmFuc2Zvcm0nLCAndHJhbnNsYXRlKDAsIDApJylcclxuICAgICAgICAgICAgICAgICQoJyNjb3Zlci1zdWJ0aXRsZScpLmNzcygnb3BhY2l0eScsIDEpXHJcbiAgICAgICAgICAgICAgICAkKCcjY292ZXItc3VidGl0bGUnKS5jc3MoJ3RyYW5zZm9ybScsICd0cmFuc2xhdGUoMCwgMCknKVxyXG4gICAgICAgICAgICAgICAgJCgnI2NvdmVyLXYgaDEnKS5jc3MoJ29wYWNpdHknLCAxKVxyXG4gICAgICAgICAgICAgICAgJCgnI2NvdmVyLXYgaDEnKS5jc3MoJ3RyYW5zZm9ybScsICd0cmFuc2xhdGUoMCwgMCknKVxyXG4gICAgICAgICAgICAgICAgJCgnI2NvdmVyLXYgaHInKS5jc3MoJ3dpZHRoJywgJzEwMCUnKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmKGluZGV4ID09IDIpe1xyXG4gICAgICAgICAgICAgICAgJCgnI2NvdmVyLXRpdGxlJykuY3NzKCdvcGFjaXR5JywgMClcclxuICAgICAgICAgICAgICAgICQoJyNjb3Zlci10aXRsZScpLmNzcygndHJhbnNmb3JtJywgJ3RyYW5zbGF0ZSgwLCA1MHB4KScpXHJcbiAgICAgICAgICAgICAgICAkKCcjY292ZXItc3VidGl0bGUnKS5jc3MoJ29wYWNpdHknLCAwKVxyXG4gICAgICAgICAgICAgICAgJCgnI2NvdmVyLXN1YnRpdGxlJykuY3NzKCd0cmFuc2Zvcm0nLCAndHJhbnNsYXRlKDAsIDUwcHgpJylcclxuICAgICAgICAgICAgICAgICQoJyNjb3Zlci12IGgxJykuY3NzKCdvcGFjaXR5JywgMClcclxuICAgICAgICAgICAgICAgICQoJyNjb3Zlci12IGgxJykuY3NzKCd0cmFuc2Zvcm0nLCAndHJhbnNsYXRlKDAsIDUwcHgpJylcclxuICAgICAgICAgICAgICAgICQoJyNjb3Zlci12IGhyJykuY3NzKCd3aWR0aCcsICcwJylcclxuICAgICAgICAgICAgICAgICQoJyNzZWN0aW9uLTMgLmJveC1jb250YWluZXInKS5jc3MoJ3RyYW5zZm9ybScsICd0cmFuc2xhdGUoMCwgNTBweCknKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmKGluZGV4ID09IDMpe1xyXG4gICAgICAgICAgICAgICAgJCgnI3NlY3Rpb24tMyAuYm94LWNvbnRhaW5lcicpLmNzcygnb3BhY2l0eScsIDEpXHJcbiAgICAgICAgICAgICAgICAkKCcjc2VjdGlvbi0zIC5ib3gtY29udGFpbmVyJykuY3NzKCd0cmFuc2Zvcm0nLCAndHJhbnNsYXRlKDAsIDApJylcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZihpbmRleCA9PSA0KXtcclxuICAgICAgICAgICAgICAgICQoJyNzZWN0aW9uLTMgLmJveC1jb250YWluZXInKS5jc3MoJ3RyYW5zZm9ybScsICd0cmFuc2xhdGUoMCwgNTBweCknKVxyXG4gICAgICAgICAgICAgICAgJCgnI21vdmllLTQnKS5nZXQoMCkucGxheSgpXHJcbiAgICAgICAgICAgICAgICAkKCcjdmlkZW8tc3RhdGUnKS5jc3MoJ29wYWNpdHknLCAwLjcpXHJcbiAgICAgICAgICAgICAgICB2aWRlb1RyYWNrID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24oKXtcclxuICAgICAgICAgICAgICAgICAgICBkcmF3VmlkZW9TdGF0ZSg0KVxyXG4gICAgICAgICAgICAgICAgfSwgMTAwKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmKGluZGV4ID09IDUpe1xyXG4gICAgICAgICAgICAgICAgJCgnI21vdmllLTUnKS5nZXQoMCkucGxheSgpXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYoaW5kZXggPT0gNil7XHJcbiAgICAgICAgICAgICAgICAkKCcjbW92aWUtNicpLmdldCgwKS5wbGF5KClcclxuICAgICAgICAgICAgICAgICQoJyN2aWRlby1zdGF0ZScpLmNzcygnb3BhY2l0eScsIDAuNylcclxuICAgICAgICAgICAgICAgIHZpZGVvVHJhY2sgPSBzZXRJbnRlcnZhbChmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICAgICAgICAgIGRyYXdWaWRlb1N0YXRlKDYpXHJcbiAgICAgICAgICAgICAgICB9LCAxMDApXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYoaW5kZXggPT0gNyl7XHJcbiAgICAgICAgICAgICAgICAkKCcjbW92aWUtNycpLmdldCgwKS5wbGF5KClcclxuICAgICAgICAgICAgICAgICQoJyN2aWRlby1zdGF0ZScpLmNzcygnb3BhY2l0eScsIDAuNylcclxuICAgICAgICAgICAgICAgIHZpZGVvVHJhY2sgPSBzZXRJbnRlcnZhbChmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICAgICAgICAgIGRyYXdWaWRlb1N0YXRlKDcpXHJcbiAgICAgICAgICAgICAgICB9LCAxMDApXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYoaW5kZXggPT0gOCl7XHJcbiAgICAgICAgICAgICAgICAkKCcjbW92aWUtOCcpLmdldCgwKS5wbGF5KClcclxuICAgICAgICAgICAgICAgICQoJyN2aWRlby1zdGF0ZScpLmNzcygnb3BhY2l0eScsIDAuNylcclxuICAgICAgICAgICAgICAgIHZpZGVvVHJhY2sgPSBzZXRJbnRlcnZhbChmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICAgICAgICAgIGRyYXdWaWRlb1N0YXRlKDgpXHJcbiAgICAgICAgICAgICAgICB9LCAxMDApXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYoaW5kZXggPT0gOSl7XHJcbiAgICAgICAgICAgICAgICAkKCcjbW92aWUtOScpLmdldCgwKS5wbGF5KClcclxuICAgICAgICAgICAgICAgICQoJyN2aWRlby1zdGF0ZScpLmNzcygnb3BhY2l0eScsIDAuNylcclxuICAgICAgICAgICAgICAgIHZpZGVvVHJhY2sgPSBzZXRJbnRlcnZhbChmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICAgICAgICAgIGRyYXdWaWRlb1N0YXRlKDkpXHJcbiAgICAgICAgICAgICAgICB9LCAxMDApXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYoaW5kZXggPT0gMTApe1xyXG4gICAgICAgICAgICAgICAgJCgnI21vdmllLTEwJykuZ2V0KDApLnBsYXkoKVxyXG4gICAgICAgICAgICAgICAgJCgnI3ZpZGVvLXN0YXRlJykuY3NzKCdvcGFjaXR5JywgMC43KVxyXG4gICAgICAgICAgICAgICAgdmlkZW9UcmFjayA9IHNldEludGVydmFsKGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgICAgICAgICAgICAgZHJhd1ZpZGVvU3RhdGUoMTApXHJcbiAgICAgICAgICAgICAgICB9LCAxMDApXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIG9uTGVhdmU6IGZ1bmN0aW9uKGluZGV4LCBuZXh0SW5kZXgsIGRpcmVjdGlvbil7XHJcblxyXG4gICAgICAgICAgICBpZihpbmRleCA9PSAyICYmIGRpcmVjdGlvbiA9PSAnZG93bicpe1xyXG4gICAgICAgICAgICAgICAgY3R4LmNsZWFyUmVjdCgwLCAwLCAzNzUsIDY2NylcclxuICAgICAgICAgICAgICAgICQoJyNzZWN0aW9uLTMgLm9yYW5nZS1iYWNrJykuY3NzKCdoZWlnaHQnLCAnMTAwdmgnKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmKGluZGV4ID09IDMpe1xyXG4gICAgICAgICAgICAgICAgJCgnI3NlY3Rpb24tMyAuYm94LWNvbnRhaW5lcicpLmNzcygnb3BhY2l0eScsIDApXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYoaW5kZXggPT0gNCl7XHJcbiAgICAgICAgICAgICAgICAkKCcjdmlkZW8tc3RhdGUnKS5jc3MoJ29wYWNpdHknLCAwKVxyXG4gICAgICAgICAgICAgICAgJCgnI3ZpZGVvLXN0YXRlLWNvbnRhaW4gLmZhLXBsYXknKS5jc3MoJ29wYWNpdHknLCAwKVxyXG4gICAgICAgICAgICAgICAgJCgnI3NlY3Rpb24tNCAuYm94LWNvbnRhaW5lci1jJykuY3NzKCdvcGFjaXR5JywgMClcclxuICAgICAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwodmlkZW9UcmFjaylcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZihpbmRleCA9PSA1KXtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYoaW5kZXggPT0gNil7XHJcbiAgICAgICAgICAgICAgICAkKCcjdmlkZW8tc3RhdGUnKS5jc3MoJ29wYWNpdHknLCAwKVxyXG4gICAgICAgICAgICAgICAgJCgnI3ZpZGVvLXN0YXRlLWNvbnRhaW4gLmZhLXBsYXknKS5jc3MoJ29wYWNpdHknLCAwKVxyXG4gICAgICAgICAgICAgICAgY2xlYXJJbnRlcnZhbCh2aWRlb1RyYWNrKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmKGluZGV4ID09IDcpe1xyXG4gICAgICAgICAgICAgICAgJCgnI3ZpZGVvLXN0YXRlJykuY3NzKCdvcGFjaXR5JywgMClcclxuICAgICAgICAgICAgICAgICQoJyN2aWRlby1zdGF0ZS1jb250YWluIC5mYS1wbGF5JykuY3NzKCdvcGFjaXR5JywgMClcclxuICAgICAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwodmlkZW9UcmFjaylcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZihpbmRleCA9PSA4KXtcclxuICAgICAgICAgICAgICAgICQoJyN2aWRlby1zdGF0ZScpLmNzcygnb3BhY2l0eScsIDApXHJcbiAgICAgICAgICAgICAgICAkKCcjdmlkZW8tc3RhdGUtY29udGFpbiAuZmEtcGxheScpLmNzcygnb3BhY2l0eScsIDApXHJcbiAgICAgICAgICAgICAgICBjbGVhckludGVydmFsKHZpZGVvVHJhY2spXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYoaW5kZXggPT0gOSl7XHJcbiAgICAgICAgICAgICAgICAkKCcjdmlkZW8tc3RhdGUnKS5jc3MoJ29wYWNpdHknLCAwKVxyXG4gICAgICAgICAgICAgICAgJCgnI3ZpZGVvLXN0YXRlLWNvbnRhaW4gLmZhLXBsYXknKS5jc3MoJ29wYWNpdHknLCAwKVxyXG4gICAgICAgICAgICAgICAgY2xlYXJJbnRlcnZhbCh2aWRlb1RyYWNrKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmKGluZGV4ID09IDEwKXtcclxuICAgICAgICAgICAgICAgICQoJyN2aWRlby1zdGF0ZScpLmNzcygnb3BhY2l0eScsIDApXHJcbiAgICAgICAgICAgICAgICAkKCcjdmlkZW8tc3RhdGUtY29udGFpbiAuZmEtcGxheScpLmNzcygnb3BhY2l0eScsIDApXHJcbiAgICAgICAgICAgICAgICBjbGVhckludGVydmFsKHZpZGVvVHJhY2spXHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgfVxyXG5cclxuICAgIH0pXHJcblxyXG4gICAgJCgnLmZwLXNlY3Rpb24nKS5jc3MoJ3RyYW5zaXRpb24nLCAnYWxsIC43cyBlYXNlLWluLW91dCcpXHJcblxyXG59KVxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9neW1uYXN0aWNzLmpzIiwibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiMzg4ZDQ2MWUyNDZkOTA2NmI0ZDQ0NDM3N2U1YWRhNTgucG5nXCI7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9hc3NldHMvZ3ltLWJnLnBuZ1xuLy8gbW9kdWxlIGlkID0gOFxuLy8gbW9kdWxlIGNodW5rcyA9IDEiXSwic291cmNlUm9vdCI6IiJ9